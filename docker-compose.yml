version: '3.8'

services:
  rustici-engine:
    build:
      context: ./rustici-engine
      dockerfile: Dockerfile
      target: main
    image: donalmacanri/rustici-engine
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgres://rusticiengine:super-secret-password@postgres:5432/rusticiengine
    profiles:
      - run
    depends_on:
      postgres:
        condition: service_healthy

  rustici-installer:
    build:
      context: ./rustici-engine
      dockerfile: Dockerfile
      target: installer
    image: donalmacanri/rustici-engine:installer
    environment:
      - DATABASE_URL=postgres://rusticiengine:super-secret-password@postgres:5432/rusticiengine
    profiles:
      - install
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:12
    environment:
      - POSTGRES_PASSWORD=super-secret-password
    configs:
      - source: init_dbs.sql
        target: /docker-entrypoint-initdb.d/init_dbs.sql
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rusticiengine -d rusticiengine"]
      interval: 5s
      timeout: 5s
      retries: 5

  my-lms:
    build:
      context: ./my-lms
      dockerfile: Dockerfile
    image: my-lms
    ports:
      - "8081:8080"
    environment:
      - ENGINE_TENANT=default
      - ENGINE_BASE_URL=http://rustici-engine:8080/RusticiEngine/api/v2
      - ENGINE_USERNAME=your_username
      - ENGINE_PASSWORD=your_password
    depends_on:
      - postgres
      - rustici-engine

volumes:
  postgres_data:

configs:
  init_dbs.sql:
    content: |
      DO $$$$
      BEGIN
         IF NOT EXISTS (
            SELECT FROM pg_catalog.pg_roles
            WHERE  rolname = 'rusticiengine') THEN
            CREATE ROLE rusticiengine LOGIN PASSWORD 'super-secret-password';
         END IF;
      END $$$$;

      CREATE DATABASE rusticiengine WITH OWNER = rusticiengine;

      \c rusticiengine

      GRANT ALL PRIVILEGES ON DATABASE rusticiengine TO rusticiengine;
      GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO rusticiengine;
      GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO rusticiengine;
      GRANT ALL PRIVILEGES ON SCHEMA public TO rusticiengine;
