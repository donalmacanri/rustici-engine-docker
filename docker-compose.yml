version: '3.8'

services:
  rustici-engine:
    build:
      context: ./rustici-engine
      dockerfile: Dockerfile
      target: main
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=rustici_engine
      - DB_USER=rustici
      - DB_PASSWORD=rustici_password
    depends_on:
      postgres:
        condition: service_healthy
      rustici-installer:
        condition: service_completed_successfully

  rustici-installer:
    build:
      context: ./rustici-engine
      dockerfile: Dockerfile
      target: installer
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=rustici_engine
      - DB_USER=rustici
      - DB_PASSWORD=rustici_password
    profiles:
      - install
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=rustici_engine
      - POSTGRES_USER=rustici
      - POSTGRES_PASSWORD=rustici_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rustici -d rustici_engine"]
      interval: 5s
      timeout: 5s
      retries: 5
    command: >
      bash -c "
        echo '
          DO $$
          BEGIN
             IF NOT EXISTS (
                SELECT FROM pg_catalog.pg_roles
                WHERE  rolname = ''rustici'') THEN
                CREATE ROLE rustici LOGIN PASSWORD ''rustici_password'';
             END IF;
          END $$;

          CREATE DATABASE rustici_engine
              WITH 
              OWNER = rustici
              ENCODING = ''UTF8''
              LC_COLLATE = ''en_US.utf8''
              LC_CTYPE = ''en_US.utf8''
              TABLESPACE = pg_default
              CONNECTION LIMIT = -1;

          \c rustici_engine

          GRANT ALL PRIVILEGES ON DATABASE rustici_engine TO rustici;
          GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO rustici;
          GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO rustici;
          GRANT ALL PRIVILEGES ON SCHEMA public TO rustici;
        ' > /docker-entrypoint-initdb.d/init.sql && 
        docker-entrypoint.sh postgres"

volumes:
  postgres_data:
